// <auto-generated />
using System;
using ChiquePrinter.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChiquePrinter.Infrastructure.Migrations
{
    [DbContext(typeof(ChiquePrinterDbContext))]
    partial class ChiquePrinterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankScemaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BookLength")
                        .HasColumnType("int");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.BankBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("EndChiqueNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("StartChiqueNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CreateById");

                    b.ToTable("BankBooks");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.BankScema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AlignRight")
                        .HasColumnType("bit");

                    b.Property<bool>("AlignTop")
                        .HasColumnType("bit");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FontIsBold")
                        .HasColumnType("bit");

                    b.Property<bool>("FontIsItalic")
                        .HasColumnType("bit");

                    b.Property<string>("FontName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FontSize")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("PaddingHorizontal")
                        .HasColumnType("int");

                    b.Property<int>("PaddingVertical")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("Xaddress1")
                        .HasColumnType("int");

                    b.Property<int>("Xaddress2")
                        .HasColumnType("int");

                    b.Property<int>("Xamount1")
                        .HasColumnType("int");

                    b.Property<int>("Xamount2")
                        .HasColumnType("int");

                    b.Property<int>("Xcomment1")
                        .HasColumnType("int");

                    b.Property<int>("Xcomment2")
                        .HasColumnType("int");

                    b.Property<int>("Xdate1")
                        .HasColumnType("int");

                    b.Property<int>("Xdate2")
                        .HasColumnType("int");

                    b.Property<int>("Xdiscription1")
                        .HasColumnType("int");

                    b.Property<int>("Xdiscription2")
                        .HasColumnType("int");

                    b.Property<int>("Xpayee1")
                        .HasColumnType("int");

                    b.Property<int>("Xpayee2")
                        .HasColumnType("int");

                    b.Property<int>("XtextAmount1")
                        .HasColumnType("int");

                    b.Property<int>("XtextAmount2")
                        .HasColumnType("int");

                    b.Property<int>("Yaddress1")
                        .HasColumnType("int");

                    b.Property<int>("Yaddress2")
                        .HasColumnType("int");

                    b.Property<int>("Yamount1")
                        .HasColumnType("int");

                    b.Property<int>("Yamount2")
                        .HasColumnType("int");

                    b.Property<int>("Ycomment1")
                        .HasColumnType("int");

                    b.Property<int>("Ycomment2")
                        .HasColumnType("int");

                    b.Property<int>("Ydate1")
                        .HasColumnType("int");

                    b.Property<int>("Ydate2")
                        .HasColumnType("int");

                    b.Property<int>("Ydiscription1")
                        .HasColumnType("int");

                    b.Property<int>("Ydiscription2")
                        .HasColumnType("int");

                    b.Property<int>("Ypayee1")
                        .HasColumnType("int");

                    b.Property<int>("Ypayee2")
                        .HasColumnType("int");

                    b.Property<int>("YtextAmount1")
                        .HasColumnType("int");

                    b.Property<int>("YtextAmount2")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId")
                        .IsUnique();

                    b.HasIndex("CreateById");

                    b.ToTable("BankScemas");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Chique", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("BankBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("MatuityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("No")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PayeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WrittenDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BankBookId");

                    b.HasIndex("BankId");

                    b.HasIndex("CreateById");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PayeeId");

                    b.ToTable("Chiques");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.ChiqueAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("Chiqueaddresss");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Payee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorzedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorzedPersonEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorzedPersonJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorzedPersonMobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorzedPersonPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("authorizationImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("payees");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("statuses");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreateById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateById");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.UserLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChiqueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StatusId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ChiqueId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StatusId1");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("UserLogs");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Bank", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.BankBook", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.Bank", "Bank")
                        .WithMany("BankBooks")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.BankScema", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.Bank", "Bank")
                        .WithOne("BankScema")
                        .HasForeignKey("ChiquePrinter.Domain.Models.BankScema", "BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Chique", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.ChiqueAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.BankBook", "BankBook")
                        .WithMany("Chiques")
                        .HasForeignKey("BankBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.Payee", "Payee")
                        .WithMany()
                        .HasForeignKey("PayeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Bank");

                    b.Navigation("BankBook");

                    b.Navigation("CreateBy");

                    b.Navigation("Currency");

                    b.Navigation("Payee");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.ChiqueAddress", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Currency", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Payee", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Status", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.User", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.User", "CreateBy")
                        .WithMany()
                        .HasForeignKey("CreateById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreateBy");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.UserLog", b =>
                {
                    b.HasOne("ChiquePrinter.Domain.Models.Chique", "Chique")
                        .WithMany("UserLogs")
                        .HasForeignKey("ChiqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.Status", null)
                        .WithMany("UserLogs")
                        .HasForeignKey("StatusId1");

                    b.HasOne("ChiquePrinter.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ChiquePrinter.Domain.Models.User", null)
                        .WithMany("UserLogs")
                        .HasForeignKey("UserId1");

                    b.Navigation("Chique");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Bank", b =>
                {
                    b.Navigation("BankBooks");

                    b.Navigation("BankScema")
                        .IsRequired();
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.BankBook", b =>
                {
                    b.Navigation("Chiques");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Chique", b =>
                {
                    b.Navigation("UserLogs");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.Status", b =>
                {
                    b.Navigation("UserLogs");
                });

            modelBuilder.Entity("ChiquePrinter.Domain.Models.User", b =>
                {
                    b.Navigation("UserLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
